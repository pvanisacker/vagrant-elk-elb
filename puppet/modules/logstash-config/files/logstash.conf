input {
	# S3 input
	#s3 {
	#	bucket => "pieter-elb-logs"
	#	credentials => ["AKIAIVYHRXYKJEYMSNEA","UY7QCo27YRAXS/O0+rdfTTGV6duPXFDrF7PNiNkG"]
	#	region_endpoint => "us-east-1"
	#}

	# Local input
	file {
		path => "/var/log/elb.log"
	}
}

filter {
	grok {
		match => ["message", '(?<time>\S+)\s(?<elb_name>\S+)\s+(?<client_ip>[0-9\.]+):(?<client_port>[0-9]+)\s+(?<elb_ip>[0-9\.]+):(?<elb_port>[0-9]+)\s(?<request_time>[0-9\.]+)\s(?<backend_time>[0-9\.]+)\s(?<response_time>[0-9\.]+)\s(?<elb_http_status>\d+)\s(?<backend_http_status>\d+)\s(?<received_bytes>\d+)\s(?<sent_bytes>\d+)\s"(?<http_method>\S+)\s(?<http_protocol>[^:]+):\/\/(?<http_host>[^:]+):(?<lb_port>\d+)(?<http_request>(?<http_resource_path>[^\?]+)(\??(?<http_resource_query>\S+)?))\s(?<http_version>\S+)"']
	}
	date {
		match => ["time","ISO8601"]
	}
	grok {
		match => ["s3bucket", '(?<s3_prefix>\S+)\/(?<aws_account_id>[0-9]+)\/elasticloadbalancing\/(?<aws_region>\S+)\/(?<elb_log_year>[0-9]+)\/(?<elb_log_month>[0-9]+)\/(?<aws_log_file_name>\S+_(?<aws_elb_public_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)_\S+)']
	}
	kv {
		field_split => "&? "
		source => "http_resource_query"
	}
	mutate {
		convert => ["client_port","integer"]
		convert => ["elb_port","integer"]
		convert => ["elb_http_status","integer"]
		convert => ["backend_http_status","integer"]
		convert => ["received_bytes","integer"]
		convert => ["sent_bytes","integer"]
		convert => ["lb_port","integer"]
		convert => ["request_time","float"]
		convert => ["backend_time","float"]
		convert => ["response_time","float"]
	}
	geoip {
		source => "client_ip"
	}
}

output {
	elasticsearch {
		index => "elb"
	}
}
